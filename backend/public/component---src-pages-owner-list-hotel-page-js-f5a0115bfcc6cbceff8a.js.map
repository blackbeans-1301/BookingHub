{"version":3,"file":"component---src-pages-owner-list-hotel-page-js-f5a0115bfcc6cbceff8a.js","mappings":"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","sources":["webpack://booking-hub/./node_modules/@material-ui/icons/Delete.js","webpack://booking-hub/./src/components/Screens/owner/ListHotel.js","webpack://booking-hub/./src/pages/owner/ListHotelPage.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import * as React from \"react\"\nimport { useState } from \"react\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport MoreVertSharpIcon from \"@material-ui/icons/MoreVertSharp\"\nimport { getAllHotels } from \"../../../apis/hotelApi\"\nimport { useEffect } from \"react\"\nimport InfoHotelModal from \"../../Items/InfoHotelModal\"\nimport { getLSItem, redirect, setLSItem } from \"../../../utils\"\nimport { FormatDateToGB } from \"../../Common/CommonFunc\"\nimport VerifyModal from \"../../Items/VerifyModal\"\n// test\nexport default function ListHotel() {\n  const [allHotels, setAllHotels] = useState()\n  const [showInfoModal, setShowInfoModal] = useState(false)\n  const [showVerifyModal, setShowVerifyModal] = useState(false)\n  const [hotelID, setHotelID] = useState()\n  const [hotelDetail, setHotelDetail] = useState({\n    name: \"\",\n    address: \"\",\n    criteria: \"\",\n    Images: \"\",\n    description: \"\",\n    province: \"\",\n  })\n\n  const token = getLSItem(\"ownerToken\")\n  useEffect(() => {\n    getAllHotels(setAllHotels, token)\n  }, [])\n  console.log(\"all hotels\", allHotels)\n\n  return (\n    <div className=\"m-4 bg-white w-screen z-10 md:w-auto\">\n      <div className=\"flex mt-3\">\n        <div className=\"relative flex items-center text-gray-400 focus-within:text-gray-600 w-5/6\">\n          <SearchIcon className=\"w-5 h-5 absolute ml-3 pointer-events-none\" />\n          <input\n            className=\"md:w-full pr-3 pl-10 py-2 font-semibold placeholder-gray-500 text-colorText rounded-2xl border-none ring-gray-300 focus:ring-primary-500 focus: ring-2\"\n            type=\"text\"\n            placeholder=\"Search...\"\n          />\n        </div>\n\n        <div className=\"w-1/6\">\n          <button className=\"w-3/4 h-full px-2 rounded-full bg-white text-colorText flex items-center justify-center ml-2 border-2 border-light-primary hover:bg-primary hover:text-white hover:shadow-md hover:shadow-gray-200\">\n            <SearchIcon />\n            <span>Search</span>\n          </button>\n        </div>\n      </div>\n\n      <h1 className=\"font-bold text-2xl mb-3 text-colorText mt-3\">\n        List of hotels\n      </h1>\n\n      <div className=\"container mx-auto px-4 sm:px-8\">\n        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n          <div className=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\">\n            {allHotels === undefined ? (\n              <div>There's no hotels</div>\n            ) : (\n              <table className=\"min-w-full leading-normal\">\n                <thead>\n                  <tr>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      No\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Hotel name\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Address\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Created date\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Updated date\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                    <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100\"></th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {allHotels.map((hotel, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\n                            {index + 1}\n                          </p>\n                        </td>\n\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\n                            {hotel.name}\n                          </p>\n                        </td>\n\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\n                            {hotel.address}\n                          </p>\n                        </td>\n\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\n                            {FormatDateToGB(hotel.createdAt)}\n                          </p>\n                        </td>\n\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\n                            {FormatDateToGB(hotel.updatedAt)}\n                          </p>\n                        </td>\n\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\">\n                          <div className=\"flex\">\n                            <button\n                              type=\"button\"\n                              className=\"inline-block mx-px text-green-300 hover:text-green-500 mr-2\"\n                              onClick={() => {\n                                setHotelDetail(hotel)\n                                setTimeout(setShowInfoModal(true), 2000)\n                              }}\n                            >\n                              <InfoIcon />\n                            </button>\n\n                            <button\n                              type=\"button\"\n                              className=\"inline-block mx-px text-rose-300 hover:text-rose-500\"\n                              onClick={() => {\n                                setShowVerifyModal(true)\n                                setHotelID(hotel.hotel_id)\n                              }}\n                            >\n                              <DeleteIcon />\n                            </button>\n\n                          </div>\n                        </td>\n\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                          <p className=\"text-gray-900 whitespace-no-wrap\">\n                            <button\n                              className=\"px-3 py-1 text-colorText rounded-sm border-2 border-primary my-4 hover:bg-primary hover:text-white mr-2\"\n                              onClick={() => {\n                                setLSItem(\"hotelID\", hotel.hotel_id)\n                                redirect(\n                                  `${process.env.API_URL}/owner/ListRoomPage`\n                                )\n                              }}\n                            >\n                              List rooms\n                            </button>\n\n                            <button\n                              className=\"px-3 py-1 text-colorText rounded-sm border-2 border-primary my-4 hover:bg-primary hover:text-white\"\n                              onClick={() => {\n                                setLSItem(\"hotelID\", hotel.hotel_id)\n                                redirect(\n                                  `${process.env.API_URL}/owner/ListReservation`\n                                )\n                              }}\n                            >\n                              List reservations\n                            </button>\n                          </p>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n      {showInfoModal && (\n        <InfoHotelModal\n          isVisible={showInfoModal}\n          isClose={() => setShowInfoModal(false)}\n          detail={hotelDetail}\n        />\n      )}\n\n      {showVerifyModal && (\n        <VerifyModal\n          isVisible={showVerifyModal}\n          isClose={() => setShowVerifyModal(false)}\n          detail=\"This hotel will be deleted. This action can't undo. Are you sure?\"\n          type=\"delete\"\n          id={hotelID}\n          page=\"hotel\"\n        />\n      )}\n    </div>\n  )\n}\n","import * as React from \"react\";\nimport ListHotel from \"../../components/Screens/owner/ListHotel\";\nimport OwnerLayout from \"../../components/Layouts/owner/OwnerLayout\";\n\nconst ListHotelPage = () => {\n  return (\n    <OwnerLayout>\n      <ListHotel />\n    </OwnerLayout>\n  );\n};\n\nexport default ListHotelPage;\n"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","ListHotel","useState","allHotels","setAllHotels","showInfoModal","setShowInfoModal","showVerifyModal","setShowVerifyModal","hotelID","setHotelID","name","address","criteria","Images","description","province","hotelDetail","setHotelDetail","token","getLSItem","useEffect","getAllHotels","console","log","className","Search","type","placeholder","undefined","map","hotel","index","key","FormatDateToGB","createdAt","updatedAt","onClick","setTimeout","Info","hotel_id","Delete","setLSItem","redirect","process","InfoHotelModal","isVisible","isClose","detail","VerifyModal","id","page","OwnerLayout"],"sourceRoot":""}