{"version":3,"file":"component---src-pages-user-profile-page-js-4cbaa510c76562a80ef0.js","mappings":"+SAwBA,IAAMA,EAAQ,IAAIC,KACeC,EAAAA,GAAW,CAC1CC,MAAOD,EAAAA,KAEJC,MAAM,2BACNC,SAAS,oBACZC,UAAWH,EAAAA,KAAaE,SAAS,wBACjCE,SAAUJ,EAAAA,KAAaE,SAAS,uBAChCG,KAAKC,EAAAA,EAAAA,MACFC,WAhBL,SAAyBC,EAAOC,GAK9B,OAJmBC,EAAAA,EAAAA,GAAOD,GACtBA,GACAE,EAAAA,EAAAA,GAAMF,EAAe,aAAc,IAAIV,KAG7C,IAWKa,IAAId,GACJI,SAAS,wDACZW,OAAQb,EAAAA,KAAaE,SAAS,qBAC9BY,aAAcd,EAAAA,KAAaE,SAAS,6B,0DCVtC,IAAMJ,EAAQ,IAAIC,KAEZgB,EAAiCf,EAAAA,GAAW,CAChDgB,YAAahB,EAAAA,KAEVE,SAAS,oBACZe,YAAajB,EAAAA,KAEVE,SAAS,sBAGRgB,EAA2BlB,EAAAA,GAAW,CAC1CG,UAAWH,EAAAA,KAERE,SAAS,oBACZE,SAAUJ,EAAAA,KAEPE,SAAS,oBACZiB,YAAanB,EAAAA,KACHO,WA3BZ,SAAyBC,EAAOC,GAK9B,OAJmBC,EAAAA,EAAAA,GAAOD,GACtBA,GACAE,EAAAA,EAAAA,GAAMF,EAAe,aAAc,IAAIV,KAG7C,IAqBuCa,IAAId,GAAOI,SAAS,wDACzDW,OAAQb,EAAAA,KAELE,SAAS,oBACZkB,YAAapB,EAAAA,KAEVE,SAAS,sBAyXd,EArXoB,YACJmB,EAAAA,EAAAA,IAAU,SAAxB,IACA,GAAgCC,EAAAA,EAAAA,YAAzBC,EAAQ,KAAEC,EAAW,KAC5B,GAAsCF,EAAAA,EAAAA,UAAS,IAAxCG,EAAW,KAAEC,EAAc,KAClC,GAA0BJ,EAAAA,EAAAA,UAAS,IAA5BK,EAAK,KACZ,GADsB,MACkBL,EAAAA,EAAAA,WAAS,IAA9B,KAAiB,MAEpCM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACCC,EAAAA,EAAAA,KAAkBT,EAAAA,EAAAA,IAAU,UAAS,OAAlDU,EAAI,OACVP,EAAYO,GAAK,2CAClB,kBAHgB,mCAKjBF,GACF,GAAG,IAEH,IAAMG,GAAuBC,EAAAA,EAAAA,IAAU,CACrCC,iBAAkBnB,EAClBoB,SAAU,SAACC,GACTC,EAAsBD,EAAOpB,YAAaoB,EAAOnB,YACnD,IAGIqB,GAAiBL,EAAAA,EAAAA,IAAU,CAC/BM,cAAe,CACbpC,UAAWoB,EAAWA,EAASpB,UAAY,GAC3CC,SAAUmB,EAAWA,EAASnB,SAAW,GACzCS,OAAQU,EAAWA,EAASV,OAAS,GACrCO,YAAaG,EAAWA,EAAST,aAAe,IAElDoB,iBAAkBhB,EAClBiB,SAAU,SAACC,GACTI,EAAkBJ,EACpB,EACAK,mBAAmB,IAGfD,EAAiB,mCAAG,WAAOJ,GAAM,yEAOpC,OANKL,EAAO,CACX1B,IAAK+B,EAAOjB,YACZhB,UAAWiC,EAAOjC,UAClBC,SAAUgC,EAAOhC,SACjBS,OAAQuB,EAAOvB,OACfC,aAAcsB,EAAOhB,aACtB,UAEsBsB,EAAAA,EAAAA,IAAeX,GAAMV,EAAAA,EAAAA,IAAU,UAAS,OAAzDsB,EAAQ,OACdC,QAAQC,IAAIF,QACKG,IAAbH,GACFI,EAAAA,GAAAA,QAAcJ,EAASK,SACvBC,YAAW,kBAAMC,EAAAA,EAAAA,IAAYC,qDAAuC,GAAE,MAEtEJ,EAAAA,GAAAA,MAAY,wDACb,2CACF,gBAjBsB,sCAmBjBV,EAAqB,mCAAG,WAAOrB,EAAaC,GAAW,yEAI1D,OAHKc,EAAO,CACXqB,SAAUpC,EACVC,YAAAA,GACD,UAEsBoC,EAAAA,EAAAA,IAActB,GAAMV,EAAAA,EAAAA,IAAU,UAAS,OACzC,GADfsB,EAAQ,OACdC,QAAQC,IAAIF,QACKG,IAAbH,EAAsB,gBACM,OAA9BI,EAAAA,GAAAA,MAAY,mBAAkB,0BAGP,mCAArBJ,EAASK,UACXD,EAAAA,GAAAA,QAAcJ,EAASK,SACvBtB,EAAe,KAChB,2CACF,gBAhB0B,wCAkB3B,OACE,gBAAC,IAAM,KACL,gBAAC4B,EAAA,EAAY,MACb,uBAAKC,UAAU,iEACb,uBAAKA,UAAU,IACb,sBAAIA,UAAU,iCAA+B,SAC7C,uBAAKA,UAAU,4BAA0B,gBAEvC,2BACA,wBAAMA,UAAU,qBAAqBhC,EAAWA,EAAStB,MAAQ,wBAGrE,2BACE,uBAAKsD,UAAU,OAAOC,IAAI,wDAAwDC,IAAI,aAG1F,uBAAKF,UAAU,eACb,sBAAIA,UAAU,mCAAiC,oBAC/C,uBAAKA,UAAU,+BACb,sBAAIA,UAAU,wBAAsB,iBACpC,uBAAKA,UAAU,yBACb,2BACE,uBAAKA,UAAU,QACb,kCACA,uBAAKA,UAAU,2CACb,sBAAIA,UAAU,qBAAqBhC,EAAcA,EAASpB,UAAY,IAAMoB,EAASnB,SAAa,aAItG,uBAAKmD,UAAU,QACb,mCACA,uBAAKA,UAAU,2CACb,sBAAIA,UAAU,qBAAqBhC,EAAWA,EAAStB,MAAQ,aAC/D,6BAIJ,uBAAKsD,UAAU,QACb,2CACA,uBAAKA,UAAU,2CACb,sBAAIA,UAAU,qBAAqBhC,EAAWA,EAASlB,IAAM,aAC7D,6BAIJ,uBAAKkD,UAAU,QACb,oCACA,uBAAKA,UAAU,2CACb,sBAAIA,UAAU,qBAAqBhC,EAAWA,EAASV,OAAS,eAKpE,uBAAK0C,UAAU,QACb,0CACA,uBAAKA,UAAU,2CACb,sBAAIA,UAAU,qBAAqBhC,EAAQ,SAAYA,EAAST,aAAiB,gBAIvF,uBAAKyC,UAAU,IACb,sBAAIA,UAAU,+EACZG,QAAS,WACPhC,EAAe,SACjB,GAAE,oBAOK,aAAhBD,GACC,uBAAK8B,UAAU,4BAA4BI,MAAO,CAAEC,gBAAiB,oBACnE,uBAAKL,UAAU,6BACb,uBAAKA,UAAU,4DACb,uBAAKA,UAAU,4BACb,sBAAIA,UAAU,qCAAmC,mBAGjD,0BACEA,UAAU,iEACVG,QAAS,WAAQhC,EAAe,GAAI,GAEpC,gBAACmC,EAAA,EAAU,QAIf,wBACEN,UAAU,oBACVpB,SAAUH,EAAqB8B,cAE/B,gBAAC,IAAW,CAACP,UAAU,QACrB,gBAAC,IAAU,CAACQ,QAAQ,aAAW,qBAC/B,gBAAC,IAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,YAAY,eACZC,KAAK,cACL3D,MAAOwB,EAAqBI,OAAOpB,YACnCW,MACEK,EAAqBoC,QAAQpD,aAC7BqD,QAAQrC,EAAqBsC,OAAOtD,aAEtCuD,SAAUvC,EAAqBwC,aAC/BC,WACEzC,EAAqBoC,QAAQpD,aAC7BgB,EAAqBsC,OAAOtD,eAMlC,gBAAC,IAAW,CAACuC,UAAU,QACrB,gBAAC,IAAU,CAACQ,QAAQ,aAAW,qBAC/B,gBAAC,IAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,YAAY,eACZC,KAAK,cACL3D,MAAOwB,EAAqBI,OAAOnB,YACnCU,MACEK,EAAqBoC,QAAQnD,aAC7BoD,QAAQrC,EAAqBsC,OAAOrD,aAEtCsD,SAAUvC,EAAqBwC,aAC/BC,WACEzC,EAAqBoC,QAAQnD,aAC7Be,EAAqBsC,OAAOrD,eAKlC,uBAAKsC,UAAU,0CAAwC,QAErD,wBACEA,UAAU,uDACVG,QAAS,kBAAMhC,EAAe,SAAS,GAAC,YAK5C,uBAAK6B,UAAU,sCAAsC5B,GACrD,0BACEoC,QAAQ,YACRR,UAAU,wFACVmB,KAAK,UAAQ,eAUR,WAAhBjD,GACC,uBAAK8B,UAAU,4BAA4BI,MAAO,CAAEC,gBAAiB,oBACnE,uBAAKL,UAAU,6BACb,uBAAKA,UAAU,4DACb,uBAAKA,UAAU,4BACb,sBAAIA,UAAU,qCAAmC,gBAGjD,0BACEA,UAAU,iEACVG,QAAS,WAAQhC,EAAe,GAAI,GAEpC,gBAACmC,EAAA,EAAU,QAGf,wBACEN,UAAU,oBACVpB,SAAUG,EAAewB,cAEzB,gBAAC,IAAW,CAACP,UAAU,QACrB,gBAAC,IAAU,CAACQ,QAAQ,aAAW,cAC/B,gBAAC,IAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,YAAY,aACZC,KAAK,YACL3D,MAAO8B,EAAeF,OAAOjC,UAC7BwB,MACEW,EAAe8B,QAAQjE,WACvBkE,QAAQ/B,EAAegC,OAAOnE,WAEhCoE,SAAUjC,EAAekC,aACzBC,WACEnC,EAAe8B,QAAQjE,WACvBmC,EAAegC,OAAOnE,aAM5B,gBAAC,IAAW,CAACoD,UAAU,QACrB,gBAAC,IAAU,CAACQ,QAAQ,aAAW,aAC/B,gBAAC,IAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,YAAY,YACZC,KAAK,WACL3D,MAAO8B,EAAeF,OAAOhC,SAC7BuB,MACEW,EAAe8B,QAAQhE,UACvBiE,QAAQ/B,EAAegC,OAAOlE,UAEhCmE,SAAUjC,EAAekC,aACzBC,WACEnC,EAAe8B,QAAQhE,UACvBkC,EAAegC,OAAOlE,YAK5B,gBAAC,IAAW,CAACmD,UAAU,QACrB,gBAAC,IAAU,CAACQ,QAAQ,aAAW,UAC/B,gBAAC,IAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,YAAY,SACZC,KAAK,SACL3D,MAAO8B,EAAeF,OAAOvB,OAC7Bc,MACEW,EAAe8B,QAAQvD,QACvBwD,QAAQ/B,EAAegC,OAAOzD,QAEhC0D,SAAUjC,EAAekC,aACzBC,WACEnC,EAAe8B,QAAQvD,QACvByB,EAAegC,OAAOzD,UAK5B,gBAAC,IAAW,CAAC0C,UAAU,QACrB,gBAAC,IAAU,CAACQ,QAAQ,aAAW,iBAC/B,gBAAC,IAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,YAAY,gBACZC,KAAK,cACL3D,MAAO8B,EAAeF,OAAOjB,YAC7BQ,MACEW,EAAe8B,QAAQjD,aACvBkD,QAAQ/B,EAAegC,OAAOnD,aAEhCoD,SAAUjC,EAAekC,aACzBC,WACEnC,EAAe8B,QAAQjD,aACvBmB,EAAegC,OAAOnD,eAK5B,gBAAC,IAAW,CAACoC,UAAU,QACrB,gBAAC,IAAU,CAACQ,QAAQ,aAAW,gBAC/B,gBAAC,IAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,YAAY,iBACZC,KAAK,cACL3D,MAAO8B,EAAeF,OAAOhB,YAC7BO,MACEW,EAAe8B,QAAQhD,aACvBiD,QAAQ/B,EAAegC,OAAOlD,aAEhCmD,SAAUjC,EAAekC,aACzBC,WACEnC,EAAe8B,QAAQhD,aACvBkB,EAAegC,OAAOlD,eAK5B,uBAAKmC,UAAU,sCAAsC5B,GACrD,0BACEoC,QAAQ,YACRR,UAAU,wFACVmB,KAAK,UAAQ,eAW/B,C","sources":["webpack://booking-hub/./src/components/Screens/user/Profile.js","webpack://booking-hub/./src/pages/user/ProfilePage.js"],"sourcesContent":["import * as React from \"react\"\nimport * as yup from \"yup\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport { useState, useEffect } from \"react\"\nimport Flatpickr from \"react-flatpickr\"\nimport \"flatpickr/dist/themes/material_blue.css\"\nimport { getUserInfor, registerAPI } from \"../../../apis/userApi\"\nimport { useFormik } from \"formik\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { toast } from \"react-toastify\"\nimport { LoadingButton } from \"@mui/lab\"\nimport { parse, isDate } from \"date-fns\"\nimport { setLSItem, getLSItem } from \"../../../utils\"\nimport { date } from \"yup\"\n\nfunction parseDateString(value, originalValue) {\n  const parsedDate = isDate(originalValue)\n    ? originalValue\n    : parse(originalValue, \"yyyy-MM-dd\", new Date())\n\n  return parsedDate\n}\nconst today = new Date()\nconst registerValidationSchema = yup.object({\n  email: yup\n    .string()\n    .email(\"Let enter a valid email\")\n    .required(\"Enter your email\"),\n  firstName: yup.string().required(\"Enter your firstName\"),\n  lastName: yup.string().required(\"Enter your lastName\"),\n  dob: date()\n    .transform(parseDateString)\n    .max(today)\n    .required(\"Enter your date of birth. Please enter a valid date.\"),\n  gender: yup.string().required(\"Enter your gender\"),\n  phone_number: yup.string().required(\"Enter your phone number\"),\n})\n\nexport default function Profile() {\n  const [toggleState, setToggleState] = useState(1)\n  const [showEditNameForm, setShowEditNameForm] = useState(false)\n  const [showEditNumberForm, setShowEditNumberForm] = useState(false)\n  const [showEditBirthdayForm, setShowEditBirthdayForm] = useState(false)\n  const [showEditGenderForm, setShowEditGenderForm] = useState(false)\n  const [showPaymentForm, setShowPaymentForm] = useState(false)\n  const [birthday, setBirthday] = useState(new Date())\n  const [expiration, setExpiration] = useState(new Date())\n  const [infor, setInfor] = useState()\n  const [edit, setEdit] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [active, setActive] = useState(\"signin\")\n  const { birth } = birthday\n  const { expirationDate } = expiration\n\n  const toggleTab = (index) => {\n    setToggleState(index)\n  }\n\n  const token = getLSItem(\"token\")\n  useEffect(() => {\n    getUserInfor(setInfor, token)\n  }, [])\n\n  console.log(\"infor\", infor)\n\n  const handleRegister = (values) => {\n    const signUp = async (postData) => {\n      const response = await registerAPI(postData)\n      console.log(\"response\", response)\n      console.log(\"type\", typeof response)\n      const type = typeof response\n      if (type === \"object\") {\n        toast.success(\"Change user's information successfully\")\n        setActive(\"signin\")\n      } else {\n        console.log(\"Change user's information failed\")\n        toast.error(response)\n      }\n\n      setIsLoading(false)\n    }\n\n    const data = {\n      email: values.email,\n      password: values.password,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      dob: values.dob,\n      gender: values.gender,\n      phone_number: values.phone_number,\n      isOwner: 1,\n    }\n    setIsLoading(true)\n    signUp(data)\n  }\n  const registerFormik = useFormik({\n    initialValues: {\n      email: infor.email,\n      firstName: infor.firstName,\n      lastName: infor.lastName,\n      dob: infor.dob,\n      gender: infor.gender,\n      phone_number: infor.phone_number,\n      isOwner: 1,\n    },\n    validationSchema: registerValidationSchema,\n    onSubmit: (values) => {\n      // console.log(\"value\" + values);\n      handleRegister(values)\n    },\n  })\n\n  return (\n    <div>\n      <div className=\"flex items-center justify-between m-4 bg-light-primary w-screen z-10 md:w-auto w-full\">\n        <div>\n          <h1 className=\"font-bold text-2xl mb-3 m-4\">\n            Hello, <span>{infor !== undefined ? infor.lastName : \"\"}</span>\n          </h1>\n          <div className=\"m-4\">\n            <p className=\"font-bold\">Account Email</p>\n            <p className=\"\">{infor !== undefined ? infor.email : \"\"}</p>\n          </div>\n          <div className=\"m-4\">\n            <p className=\"font-bold\">Name</p>\n            <p className=\"\">\n              {infor !== undefined ? `${infor.firstName} ${infor.lastName}` : \"\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"mr-10 relative\">\n          <img\n            className=\"w-32 h-32 rounded-full\"\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPyGNr2qL63Sfugk2Z1-KBEwMGOfycBribew&usqp=CAU\"\n          />\n          <button className=\"w-8 h-8 rounded-full bg-slate-300 absolute top-24 right-2 border-gray-300 border-2 hover:shadow-xl hover:border-transparent hover:bg-white\">\n            <EditIcon />\n          </button>\n        </div>\n\n      </div>\n\n      <div className=\"flex flex-col relative w-screen md:w-auto w-full bg-light-primary break-all border-2 m-4\">\n        <div className=\"flex\">\n          <div\n            className={\n              toggleState === 1\n                ? \"p-2.5 text-center w-6/12 cursor-pointer box-content relative outline-0 bg-white border-b-2 border-primary font-bold\"\n                : \"p-2.5 text-center w-6/12 cursor-pointer box-content relative outline-0 bg-light-primary\"\n            }\n            onClick={() => toggleTab(1)}\n          >\n            Dashboard\n          </div>\n          <div\n            className={\n              toggleState === 2\n                ? \"p-2.5 text-center w-6/12 cursor-pointer box-content relative outline-0 bg-white border-b-2 border-primary font-bold\"\n                : \"p-2.5 text-center w-6/12 cursor-pointer box-content relative outline-0 bg-light-primary\"\n            }\n            onClick={() => toggleTab(2)}\n          >\n            General settings\n          </div>\n          <div\n            className={\n              toggleState === 3\n                ? \"p-2.5 text-center w-6/12 cursor-pointer box-content relative outline-0 bg-white border-b-2 border-primary font-bold\"\n                : \"p-2.5 text-center w-6/12 cursor-pointer box-content relative outline-0 bg-light-primary\"\n            }\n            onClick={() => toggleTab(3)}\n          >\n            Payment details\n          </div>\n        </div>\n\n        <div className=\"grow\">\n          <div\n            className={\n              toggleState === 1\n                ? \"bg-white p-5 w-full h-full p-6 transition duration-300 block\"\n                : \"bg-white p-5 w-full h-full p-6 transition duration-300 hidden\"\n            }\n          >\n            <h1 className=\"font-bold text-2xl mb-4\">Your previous searches</h1>\n            <div>\n              <h2 className=\"font-bold text-xl ml-2 mb-4\">\n                You've got no search history – let's change that!\n              </h2>\n            </div>\n          </div>\n\n          <div\n            className={\n              toggleState === 2\n                ? \"bg-white p-5 w-full h-full p-6 transition duration-300 block\"\n                : \"bg-white p-5 w-full h-full p-6 transition duration-300 hidden\"\n            }\n          >\n            <h1 className=\"font-bold text-2xl mb-4\">General settings</h1>\n            <div className=\"\">\n              <h2 className=\"font-bold text-xl ml-2 mb-4\">Login details</h2>\n\n              <form\n                className=\"flex flex-col m-4\"\n                onSubmit={registerFormik.handleSubmit}\n              >\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Firstname</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Enter your firstname...\"\n                    name=\"firstName\"\n                    value={registerFormik.values.firstName}\n                    error={\n                      registerFormik.touched.firstName &&\n                      Boolean(registerFormik.errors.firstName)\n                    }\n                    onChange={registerFormik.handleChange}\n                    helperText={\n                      registerFormik.touched.firstName &&\n                      registerFormik.errors.firstName\n                    }\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Lastname</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Enter your lastname...\"\n                    name=\"lastName\"\n                    value={registerFormik.values.lastName}\n                    error={\n                      registerFormik.touched.lastName &&\n                      Boolean(registerFormik.errors.lastName)\n                    }\n                    onChange={registerFormik.handleChange}\n                    helperText={\n                      registerFormik.touched.lastName &&\n                      registerFormik.errors.lastName\n                    }\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Email</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Enter your email...\"\n                    name=\"email\"\n                    value={registerFormik.values.email}\n                    error={\n                      registerFormik.touched.email &&\n                      Boolean(registerFormik.errors.email)\n                    }\n                    onChange={registerFormik.handleChange}\n                    helperText={\n                      registerFormik.touched.email &&\n                      registerFormik.errors.email\n                    }\n                    disabled\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Date of birth</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"yyyy-mm-dd\"\n                    name=\"dob\"\n                    value={registerFormik.values.dob}\n                    error={\n                      registerFormik.touched.dob &&\n                      Boolean(registerFormik.errors.dob)\n                    }\n                    onChange={registerFormik.handleChange}\n                    helperText={\n                      registerFormik.touched.dob && registerFormik.errors.dob\n                    }\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Gender</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Enter your gender\"\n                    name=\"gender\"\n                    value={registerFormik.values.gender}\n                    error={\n                      registerFormik.touched.gender &&\n                      Boolean(registerFormik.errors.gender)\n                    }\n                    onChange={registerFormik.handleChange}\n                    helperText={\n                      registerFormik.touched.gender &&\n                      registerFormik.errors.gender\n                    }\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Phone number</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Enter your phone number...\"\n                    name=\"phone_number\"\n                    value={registerFormik.values.phone_number}\n                    error={\n                      registerFormik.touched.phone_number &&\n                      Boolean(registerFormik.errors.phone_number)\n                    }\n                    onChange={registerFormik.handleChange}\n                    helperText={\n                      registerFormik.touched.phone_number &&\n                      registerFormik.errors.phone_number\n                    }\n                  />\n                </FormControl>\n\n                <LoadingButton\n                  loading={isLoading}\n                  variant=\"contained\"\n                  className=\"bg-sky-300 text-xl font-bold rounded-full mt-4 hover:bg-sky-500 hover:text-white py-2\"\n                  type=\"submit\"\n                >\n                  Submit\n                </LoadingButton>\n              </form>\n            </div>\n          </div>\n\n          <div\n            className={\n              toggleState === 3\n                ? \"bg-white p-5 w-full h-full p-6 transition duration-300 block\"\n                : \"bg-white p-5 w-full h-full p-6 transition duration-300 hidden\"\n            }\n          >\n            <h1 className=\"font-bold text-2xl mb-4\">Payment details</h1>\n            <div className={showPaymentForm === false ? \"block\" : \"hidden\"}>\n              <h2 className=\"font-bold text-xl ml-2 mb-4\">\n                Saved payment methods\n              </h2>\n              <p className=\"font-light ml-4\">\n                Choose from your saved payment methods when booking to quickly\n                autofill your payment info.\n              </p>\n              <button\n                className=\"ml-6 mt-4 px-2 w-44 px-2 text-colorText text-lg bg-white border-2 border-primary hover:text-white hover:bg-primary mr-4 rounded-full font-bold\"\n                onClick={() => setShowPaymentForm(true)}\n              >\n                Add a credit card\n              </button>\n            </div>\n            <form\n              className={showPaymentForm === true ? \"block ml-4\" : \"hidden\"}\n            >\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">Name on card</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">Card number</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">Expiration date</p>\n                <Flatpickr\n                  className=\"w-full pr-3 pl-2 py-2 font-semibold placeholder-gray-500 text-colorText rounded-2xl boder-none ring-2 ring-primary focus:ring-primary-500 focus: ring-2\"\n                  value={expirationDate}\n                  onChange={(expirationDate) => {\n                    setExpiration({ expirationDate })\n                  }}\n                  options={{\n                    altFormat: \"m/Y\",\n                    altInput: true,\n                  }}\n                  placeholder=\"MM/YY\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">Address line 1</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">Address line 2 (optional)</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">Postal code</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">City</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">State/ Region</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"mt-4\">\n                <p className=\"text-lg mb-2\">Country</p>\n                <input\n                  type=\"text\"\n                  className=\"border-b-2 border-primary px-2 text-colorText w-full\"\n                />\n              </div>\n\n              <div className=\"flex mt-4\">\n                <button\n                  type=\"submit\"\n                  className=\"w-24 px-4 py-1 text-colorText bg-light-primary hover:text-white hover:bg-primary mr-4 rounded-full\"\n                >\n                  Save\n                </button>\n                <button\n                  className=\"w-24 px-4 py-1 text-colorText bg-white border-2 border-primary hover:text-white hover:bg-primary mr-4 rounded-full\"\n                  onClick={() => setShowEditNumberForm(false)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from \"react\"\nimport * as yup from \"yup\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport { useEffect, useState } from \"react\"\nimport Layout from \"../../components/Layouts\"\nimport Profile from \"../../components/Screens/user/Profile\"\nimport { getLSItem, redirect } from \"../../utils\"\nimport { getUserInfor } from \"../../apis/userApi\"\nimport { toast, ToastContainer } from \"react-toastify\"\nimport { date } from \"yup\"\nimport { parse, isDate } from \"date-fns\"\nimport { useFormik } from \"formik\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport ToastMessage from \"../../components/Items/ToastMessage\"\nimport { resetPassword, getUserInfoEdited, updateUserInfo } from \"../../apis/userApi\"\n\n\nfunction parseDateString(value, originalValue) {\n  const parsedDate = isDate(originalValue)\n    ? originalValue\n    : parse(originalValue, \"yyyy-MM-dd\", new Date())\n\n  return parsedDate\n}\n\nconst today = new Date()\n\nconst changePasswordValidationSchema = yup.object({\n  oldPassword: yup\n    .string()\n    .required(\"Enter your email\"),\n  newPassword: yup\n    .string()\n    .required(\"Enter your email\"),\n})\n\nconst editInfoValidationSchema = yup.object({\n  firstName: yup\n    .string()\n    .required(\"Enter your email\"),\n  lastName: yup\n    .string()\n    .required(\"Enter your email\"),\n  dateOfBirth: yup\n    .date().transform(parseDateString).max(today).required(\"Enter your date of birth. Please enter a valid date.\"),\n  gender: yup\n    .string()\n    .required(\"Enter your email\"),\n  phoneNumber: yup\n    .string()\n    .required(\"Enter your email\"),\n})\n\n\nconst ProfilePage = () => {\n  const email = getLSItem(\"email\")\n  const [userData, setUserData] = useState()\n  const [modalActive, setModalActive] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [editedStatus, setEditedStatus] = useState(false)\n\n  useEffect(() => {\n    const getUserData = async () => {\n      const data = await getUserInfoEdited(getLSItem(\"token\"))\n      setUserData(data)\n    }\n\n    getUserData()\n  }, [])\n\n  const changePasswordFormik = useFormik({\n    validationSchema: changePasswordValidationSchema,\n    onSubmit: (values) => {\n      requestChangePassword(values.oldPassword, values.newPassword)\n    },\n  })\n\n  const editInfoFormik = useFormik({\n    initialValues: {\n      firstName: userData ? userData.firstName : '',\n      lastName: userData ? userData.lastName : '',\n      gender: userData ? userData.gender : '',\n      phoneNumber: userData ? userData.phone_number : '',\n    },\n    validationSchema: editInfoValidationSchema,\n    onSubmit: (values) => {\n      requestUpdateInfo(values)\n    },\n    enableReinitialze: true,\n  })\n\n  const requestUpdateInfo = async (values) => {\n    const data = {\n      dob: values.dateOfBirth,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      gender: values.gender,\n      phone_number: values.phoneNumber,\n    }\n\n    const response = await updateUserInfo(data, getLSItem(\"token\"))\n    console.log(response)\n    if (response !== undefined) {\n      toast.success(response.message)\n      setTimeout(() => redirect(`${process.env.API_URL}/user/ProfilePage`), 1000)\n    } else {\n      toast.error(\"Error updating information. Plase try again later...\")\n    }\n  }\n\n  const requestChangePassword = async (oldPassword, newPassword) => {\n    const data = {\n      password: oldPassword,\n      newPassword,\n    }\n\n    const response = await resetPassword(data, getLSItem(\"token\"))\n    console.log(response)\n    if (response === undefined) {\n      toast.error(\"Wrong password!\")\n      return\n    }\n    if (response.message === 'Updated password successfully!') {\n      toast.success(response.message)\n      setModalActive(\"\")\n    }\n  }\n\n  return (\n    <Layout>\n      <ToastMessage />\n      <div className=\"h-80 w-full bg-primary-light flex pt-20 px-32 justify-between\">\n        <div className=\"\">\n          <h1 className=\"text-white font-bold text-5xl\">Hello</h1>\n          <div className=\"text-white text-md pt-12\">\n            Account email\n            <br />\n            <span className=\"text-lg font-bold\">{userData ? userData.email : \"error getting data\"}</span>\n          </div>\n        </div>\n        <div>\n          <img className=\"w-48\" src=\"https://cdn-icons-png.flaticon.com/512/149/149071.png\" alt=\"avatar\"></img>\n        </div>\n      </div>\n      <div className=\"px-32 py-20\">\n        <h1 className=\"font-bold text-primary text-2xl\">General settings</h1>\n        <div className=\"p-8 border mt-12 rounded-md\">\n          <h1 className=\"font-bold text-black\">Login details</h1>\n          <div className=\"flex justify-between \">\n            <div>\n              <div className=\"mt-8\">\n                <h1>Name</h1>\n                <div className=\"flex w-80 justify-between border-b mt-2\">\n                  <h1 className=\"text-xl font-bold\">{userData ? `${userData.firstName + \" \" + userData.lastName}` : \"not set\"}</h1>\n                </div>\n              </div>\n\n              <div className=\"mt-8\">\n                <h1>Email</h1>\n                <div className=\"flex w-80 justify-between border-b mt-2\">\n                  <h1 className=\"text-xl font-bold\">{userData ? userData.email : \"(not set)\"}</h1>\n                  <h1></h1>\n                </div>\n              </div>\n\n              <div className=\"mt-8\">\n                <h1>Date of birth</h1>\n                <div className=\"flex w-80 justify-between border-b mt-2\">\n                  <h1 className=\"text-xl font-bold\">{userData ? userData.dob : \"(not set)\"}</h1>\n                  <h1></h1>\n                </div>\n              </div>\n\n              <div className=\"mt-8\">\n                <h1>Gender</h1>\n                <div className=\"flex w-80 justify-between border-b mt-2\">\n                  <h1 className=\"text-xl font-bold\">{userData ? userData.gender : \"(not set)\"}</h1>\n\n                </div>\n              </div>\n\n              <div className=\"mt-8\">\n                <h1>Phone number</h1>\n                <div className=\"flex w-80 justify-between border-b mt-2\">\n                  <h1 className=\"text-xl font-bold\">{userData ? `(+84) ${userData.phone_number}` : \"(not set)\"}</h1>\n                </div>\n              </div>\n            </div>\n            <div className=\"\">\n              <h1 className=\"rounded-lg py-4 px-12 bg-primary text-white text-xl font-bold cursor-pointer\"\n                onClick={() => {\n                  setModalActive(\"update\")\n                }}\n              >Edit Profile</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalActive === \"changePW\" && (\n        <div className=\"w-full h-full fixed top-0\" style={{ backgroundColor: \"rgba(0,0,0,0.5)\" }}>\n          <div className=\"flex justify-center mt-12\">\n            <div className=\"bg-white w-1/2 p-2 rounded flex flex-col m-2 z-10 top-20\">\n              <div className=\"flex justify-between m-2\">\n                <h2 className=\"font-bold text-3xl text-colorText\">\n                  Change password\n                </h2>\n                <button\n                  className=\"text-light-close text-xl place-self-end hover:text-close-color\"\n                  onClick={() => { setModalActive(\"\") }}\n                >\n                  <CancelIcon />\n                </button>\n              </div>\n\n              <form\n                className=\"flex flex-col m-4\"\n                onSubmit={changePasswordFormik.handleSubmit}\n              >\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Your old password</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Old password\"\n                    name=\"oldPassword\"\n                    value={changePasswordFormik.values.oldPassword}\n                    error={\n                      changePasswordFormik.touched.oldPassword &&\n                      Boolean(changePasswordFormik.errors.oldPassword)\n                    }\n                    onChange={changePasswordFormik.handleChange}\n                    helperText={\n                      changePasswordFormik.touched.oldPassword &&\n                      changePasswordFormik.errors.oldPassword\n                    }\n                  />\n                </FormControl>\n\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Your new password</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"New password\"\n                    name=\"newPassword\"\n                    value={changePasswordFormik.values.newPassword}\n                    error={\n                      changePasswordFormik.touched.newPassword &&\n                      Boolean(changePasswordFormik.errors.newPassword)\n                    }\n                    onChange={changePasswordFormik.handleChange}\n                    helperText={\n                      changePasswordFormik.touched.newPassword &&\n                      changePasswordFormik.errors.newPassword\n                    }\n                  />\n                </FormControl>\n\n                <div className=\"p-2 right-0 flex justify-end items-end\">\n                  Go to\n                  <span\n                    className=\"font-bold text-light-primary hover:text-primary mx-2\"\n                    onClick={() => setModalActive(\"signin\")}\n                  >\n                    Sign in\n                  </span>\n                </div>\n                <div className=\"text-red-700 font-bold text-center\">{error}</div>\n                <button\n                  variant=\"contained\"\n                  className=\"bg-sky-300 text-xl font-bold rounded-full mt-6 hover:bg-sky-500 hover:text-white py-2\"\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {modalActive === \"update\" && (\n        <div className=\"w-full h-full fixed top-0\" style={{ backgroundColor: \"rgba(0,0,0,0.5)\" }}>\n          <div className=\"flex justify-center mt-12\">\n            <div className=\"bg-white w-1/2 p-2 rounded flex flex-col m-2 z-10 top-20\">\n              <div className=\"flex justify-between m-2\">\n                <h2 className=\"font-bold text-3xl text-colorText\">\n                  Edit Profile\n                </h2>\n                <button\n                  className=\"text-light-close text-xl place-self-end hover:text-close-color\"\n                  onClick={() => { setModalActive(\"\") }}\n                >\n                  <CancelIcon />\n                </button>\n              </div>\n              <form\n                className=\"flex flex-col m-4\"\n                onSubmit={editInfoFormik.handleSubmit}\n              >\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">First name</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"First name\"\n                    name=\"firstName\"\n                    value={editInfoFormik.values.firstName}\n                    error={\n                      editInfoFormik.touched.firstName &&\n                      Boolean(editInfoFormik.errors.firstName)\n                    }\n                    onChange={editInfoFormik.handleChange}\n                    helperText={\n                      editInfoFormik.touched.firstName &&\n                      editInfoFormik.errors.firstName\n                    }\n                  />\n                </FormControl>\n\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Last name</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Last name\"\n                    name=\"lastName\"\n                    value={editInfoFormik.values.lastName}\n                    error={\n                      editInfoFormik.touched.lastName &&\n                      Boolean(editInfoFormik.errors.lastName)\n                    }\n                    onChange={editInfoFormik.handleChange}\n                    helperText={\n                      editInfoFormik.touched.lastName &&\n                      editInfoFormik.errors.lastName\n                    }\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Gender</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Gender\"\n                    name=\"gender\"\n                    value={editInfoFormik.values.gender}\n                    error={\n                      editInfoFormik.touched.gender &&\n                      Boolean(editInfoFormik.errors.gender)\n                    }\n                    onChange={editInfoFormik.handleChange}\n                    helperText={\n                      editInfoFormik.touched.gender &&\n                      editInfoFormik.errors.gender\n                    }\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Date of birth</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"Date of birth\"\n                    name=\"dateOfBirth\"\n                    value={editInfoFormik.values.dateOfBirth}\n                    error={\n                      editInfoFormik.touched.dateOfBirth &&\n                      Boolean(editInfoFormik.errors.dateOfBirth)\n                    }\n                    onChange={editInfoFormik.handleChange}\n                    helperText={\n                      editInfoFormik.touched.dateOfBirth &&\n                      editInfoFormik.errors.dateOfBirth\n                    }\n                  />\n                </FormControl>\n\n                <FormControl className=\"my-2\">\n                  <Typography variant=\"subtitle1\">Phone number</Typography>\n                  <TextField\n                    sx={{\n                      height: \"85px\",\n                    }}\n                    placeholder=\"EX: 0123456789\"\n                    name=\"phoneNumber\"\n                    value={editInfoFormik.values.phoneNumber}\n                    error={\n                      editInfoFormik.touched.phoneNumber &&\n                      Boolean(editInfoFormik.errors.phoneNumber)\n                    }\n                    onChange={editInfoFormik.handleChange}\n                    helperText={\n                      editInfoFormik.touched.phoneNumber &&\n                      editInfoFormik.errors.phoneNumber\n                    }\n                  />\n                </FormControl>\n\n                <div className=\"text-red-700 font-bold text-center\">{error}</div>\n                <button\n                  variant=\"contained\"\n                  className=\"bg-sky-300 text-xl font-bold rounded-full mt-6 hover:bg-sky-500 hover:text-white py-2\"\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </Layout >\n  )\n}\n\nexport default ProfilePage\n"],"names":["today","Date","yup","email","required","firstName","lastName","dob","date","transform","value","originalValue","isDate","parse","max","gender","phone_number","changePasswordValidationSchema","oldPassword","newPassword","editInfoValidationSchema","dateOfBirth","phoneNumber","getLSItem","useState","userData","setUserData","modalActive","setModalActive","error","useEffect","getUserData","getUserInfoEdited","data","changePasswordFormik","useFormik","validationSchema","onSubmit","values","requestChangePassword","editInfoFormik","initialValues","requestUpdateInfo","enableReinitialze","updateUserInfo","response","console","log","undefined","toast","message","setTimeout","redirect","process","password","resetPassword","ToastMessage","className","src","alt","onClick","style","backgroundColor","Cancel","handleSubmit","variant","sx","height","placeholder","name","touched","Boolean","errors","onChange","handleChange","helperText","type"],"sourceRoot":""}