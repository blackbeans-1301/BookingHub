{"version":3,"file":"component---src-pages-user-settings-page-js-cd63e1bdd478fe5eaced.js","mappings":"mUAcMA,EAAmBC,EAAAA,GAAW,CAClCC,SAAUD,EAAAA,KAAaE,SAAS,uBAChCC,YAAaH,EAAAA,KAAaE,SAAS,6BAGtB,SAASE,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAApCC,EAAS,KAAEC,EAAY,KAExBC,GAAQC,EAAAA,EAAAA,IAAU,SA2BlBC,GAAuBC,EAAAA,EAAAA,IAAU,CACrCC,cAAe,CACbX,SAAU,GACVE,YAAa,IAEfJ,iBAAkBA,EAClBc,SAAU,SAACC,IA/BgB,SAACA,GAC5B,IAAMC,EAAQ,mCAAG,WAAOC,GAAQ,wFACPC,EAAAA,EAAAA,IAAcD,EAAUR,GAAM,OAA/CU,EAAQ,OACdC,QAAQC,IAAI,WAAYF,GACxBC,QAAQC,IAAI,cAAeF,GAEd,iBADOA,GAElBC,QAAQC,IAAI,UAAWC,OAAOP,OAAOI,GAAU,IAC/CI,EAAAA,GAAAA,QAAcD,OAAOP,OAAOI,GAAU,MAEtCC,QAAQC,IAAI,0BACZE,EAAAA,GAAAA,MAAYJ,IAGdX,GAAa,GAAM,2CACpB,gBAda,sCAgBRgB,EAAO,CACXtB,SAAUa,EAAOb,SACjBE,YAAaW,EAAOX,aAEtBI,GAAa,GACbQ,EAASQ,EACX,CAUIC,CAAqBV,EACvB,IAGF,OACE,uBAAKW,UAAU,+CACb,sBAAIA,UAAU,2BAAyB,mBAEvC,gBAACC,EAAA,EAAY,MACb,uBAAKD,UAAU,0DACb,sBAAIA,UAAU,gCAA8B,mBAC5C,wBAAMA,UAAU,yBAAyBZ,SAAUH,EAAqBiB,cACtE,gBAACC,EAAA,EAAW,CAACH,UAAU,QACrB,gBAACI,EAAA,EAAU,CAACC,QAAQ,aAAW,YAC/B,gBAACC,EAAA,EAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,KAAK,WACLC,YAAY,yBACZC,KAAK,WACLC,MAAO3B,EAAqBI,OAAOb,SACnCqC,MACE5B,EAAqB6B,QAAQtC,UAAYuC,QAAQ9B,EAAqB+B,OAAOxC,UAE/EyC,SAAUhC,EAAqBiC,aAC/BC,WAAYlC,EAAqB6B,QAAQtC,UAAYS,EAAqB+B,OAAOxC,YAIrF,gBAAC2B,EAAA,EAAW,CAACH,UAAU,QACrB,gBAACI,EAAA,EAAU,CAACC,QAAQ,aAAW,gBAC/B,gBAACC,EAAA,EAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,KAAK,WACLC,YAAY,6BACZC,KAAK,cACLC,MAAO3B,EAAqBI,OAAOX,YACnCmC,MACE5B,EAAqB6B,QAAQpC,aAC7BqC,QAAQ9B,EAAqB+B,OAAOtC,aAEtCuC,SAAUhC,EAAqBiC,aAC/BC,WACElC,EAAqB6B,QAAQpC,aAAeO,EAAqB+B,OAAOtC,eAK9E,gBAACyB,EAAA,EAAW,CAACH,UAAU,QACrB,gBAACI,EAAA,EAAU,CAACC,QAAQ,aAAW,wBAC/B,gBAACC,EAAA,EAAS,CACRC,GAAI,CACFC,OAAQ,QAEVC,KAAK,WACLC,YAAY,6BACZC,KAAK,cACLC,MAAO3B,EAAqBI,OAAOX,YACnCmC,MACE5B,EAAqB6B,QAAQpC,aAC7BqC,QAAQ9B,EAAqB+B,OAAOtC,aAEtCuC,SAAUhC,EAAqBiC,aAC/BC,WACElC,EAAqB6B,QAAQpC,aAAeO,EAAqB+B,OAAOtC,eAK9E,gBAAC0C,EAAA,EAAa,CACZX,KAAK,SACLY,QAASxC,EACTwB,QAAQ,YACRL,UAAU,mGAAiG,qBAQvH,CCzIA,IAQA,EARqB,WACnB,OACE,gBAAC,IAAM,KACL,gBAACrB,EAAQ,MAGf,C","sources":["webpack://booking-hub/./src/components/Screens/user/Settings.js","webpack://booking-hub/./src/pages/user/SettingsPage.js"],"sourcesContent":["import * as React from \"react\"\nimport * as yup from \"yup\"\nimport { useFormik } from \"formik\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { loginAPI, getInformation, registerAPI, resetPassword } from \"../../../apis/userApi\"\nimport { toast } from \"react-toastify\"\nimport { LoadingButton } from \"@mui/lab\"\nimport { useState } from \"react\"\nimport ToastMessage from \"../../Items/ToastMessage\"\nimport { getLSItem, setLSItem } from \"../../../utils\"\n\n\nconst validationSchema = yup.object({\n  password: yup.string().required(\"Enter your password\"),\n  newPassword: yup.string().required(\"Enter your new password\")\n})\n\nexport default function Settings() {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const token = getLSItem(\"token\")\n  // console.log('token', token)\n  const handleChangePassword = (values) => {\n    const getToken = async (postData) => {\n      const response = await resetPassword(postData, token)\n      console.log(\"response\", response)\n      console.log(\"type\", typeof response)\n      const type = typeof response\n      if (type === \"object\") {\n        console.log('message', Object.values(response)[0])\n        toast.success(Object.values(response)[0])\n      } else {\n        console.log(\"update password failed\")\n        toast.error(response)\n      }\n\n      setIsLoading(false)\n    }\n\n    const data = {\n      password: values.password,\n      newPassword: values.newPassword,\n    }\n    setIsLoading(true)\n    getToken(data)\n  }\n\n  const changePasswordFormik = useFormik({\n    initialValues: {\n      password: \"\",\n      newPassword: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      // console.log(\"value\" + values);\n      handleChangePassword(values)\n    },\n  })\n\n  return (\n    <div className=\"m-4 bg-white w-screen z-10 md:w-auto w-full\">\n      <h1 className=\"font-bold text-2xl mb-3\">Setting Account</h1>\n\n      <ToastMessage />\n      <div className=\"bg-white shadow-xl shadow-blue-100 rounded-2xl m-4 p-4\">\n        <h2 className=\"font-bold text-2xl mb-3 ml-4\">Change password</h2>\n        <form className=\"flex flex-col m-4 mb-4\" onSubmit={changePasswordFormik.handleSubmit}>\n          <FormControl className=\"my-4\">\n            <Typography variant=\"subtitle1\">Password</Typography>\n            <TextField\n              sx={{\n                height: \"85px\",\n              }}\n              type=\"password\"\n              placeholder=\"Enter your password...\"\n              name=\"password\"\n              value={changePasswordFormik.values.password}\n              error={\n                changePasswordFormik.touched.password && Boolean(changePasswordFormik.errors.password)\n              }\n              onChange={changePasswordFormik.handleChange}\n              helperText={changePasswordFormik.touched.password && changePasswordFormik.errors.password}\n            />\n          </FormControl>\n\n          <FormControl className=\"my-4\">\n            <Typography variant=\"subtitle1\">New password</Typography>\n            <TextField\n              sx={{\n                height: \"85px\",\n              }}\n              type=\"password\"\n              placeholder=\"Enter your new password...\"\n              name=\"newPassword\"\n              value={changePasswordFormik.values.newPassword}\n              error={\n                changePasswordFormik.touched.newPassword &&\n                Boolean(changePasswordFormik.errors.newPassword)\n              }\n              onChange={changePasswordFormik.handleChange}\n              helperText={\n                changePasswordFormik.touched.newPassword && changePasswordFormik.errors.newPassword\n              }\n            />\n          </FormControl>\n\n          <FormControl className=\"my-4\">\n            <Typography variant=\"subtitle1\">Confirm new password</Typography>\n            <TextField\n              sx={{\n                height: \"85px\",\n              }}\n              type=\"password\"\n              placeholder=\"Enter your new password...\"\n              name=\"newPassword\"\n              value={changePasswordFormik.values.newPassword}\n              error={\n                changePasswordFormik.touched.newPassword &&\n                Boolean(changePasswordFormik.errors.newPassword)\n              }\n              onChange={changePasswordFormik.handleChange}\n              helperText={\n                changePasswordFormik.touched.newPassword && changePasswordFormik.errors.newPassword\n              }\n            />\n          </FormControl>\n\n          <LoadingButton\n            type=\"submit\"\n            loading={isLoading}\n            variant=\"contained\"\n            className=\"bg-sky-300 text-xl font-bold rounded-full mt-4 hover:bg-sky-500 hover:text-white py-2 mt-4 mb-4\"\n          >\n            Update password\n          </LoadingButton>\n        </form>\n      </div>\n    </div>\n  )\n}\n","import * as React from \"react\";\nimport Layout from \"../../components/Layouts\";\nimport Settings from \"../../components/Screens/user/Settings\";\n\nconst SettingsPage = () => {\n  return (\n    <Layout>\n      <Settings />\n    </Layout>\n  );\n};\n\nexport default SettingsPage;\n"],"names":["validationSchema","yup","password","required","newPassword","Settings","useState","isLoading","setIsLoading","token","getLSItem","changePasswordFormik","useFormik","initialValues","onSubmit","values","getToken","postData","resetPassword","response","console","log","Object","toast","data","handleChangePassword","className","ToastMessage","handleSubmit","FormControl","Typography","variant","TextField","sx","height","type","placeholder","name","value","error","touched","Boolean","errors","onChange","handleChange","helperText","LoadingButton","loading"],"sourceRoot":""}